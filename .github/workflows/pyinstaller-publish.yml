name: Upload Windows Python Package

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: 'windows-latest'
    steps: # 构建流程的步骤
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true # 增加这一行来拉取 Git Submodule
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Build frontend
      run: |
        npm install
        npm run build
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Build Rust extension for Python using Maturin
      uses: PyO3/maturin-action@v1
      with:
        command: build
        args: --release
    - name: Build Python backend with PyInstaller
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install target/wheels/*.whl
        pip install Pillow pyinstaller
        pyinstaller biliup.spec
    - name: Rename and move sidecar
      run: |
        # 动态获取rustc的target triple
        $TARGET_TRIPLE = rustc -Vv | Select-String "host:" | ForEach-Object {$_.Line.split(" ")[1]}
        echo "Target Triple: $TARGET_TRIPLE"
        
        # 创建目标目录 (如果不存在)
        New-Item -ItemType Directory -Force -Path tauri-app/src-tauri/binaries
        
        # 假设的原始路径和新路径
        $SOURCE_PATH = "dist/biliup.exe"
        $DESTINATION_PATH = "tauri-app/src-tauri/binaries/biliup-$TARGET_TRIPLE.exe"
        
        echo "Moving $SOURCE_PATH to $DESTINATION_PATH"
        
        # 使用PowerShell的Move-Item命令进行移动和重命名
        Move-Item -Path $SOURCE_PATH -Destination $DESTINATION_PATH
      shell: pwsh
    - name: Debug - Check sidecar and config
      run: |
        echo "--- Contents of tauri-app/src-tauri/binaries ---"
        Get-ChildItem -Path tauri-app/src-tauri/binaries -Recurse
        echo "--- Contents of tauri.conf.json ---"
        Get-Content -Path tauri-app/src-tauri/tauri.conf.json
      shell: pwsh
    - name: Install Tauri frontend dependencies
      run: |
        cd tauri-app
        npm install
    - name: Build Tauri App
      uses: tauri-apps/tauri-action@v0.5.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tagName: app-v__VERSION__ # tauri-action 会用应用版本号替换 __VERSION__
        releaseName: 'App v__VERSION__'
        releaseBody: 'See the assets to download this version.'
        releaseDraft: true # 创建一个草稿 Release，而不是直接发布
        projectPath: tauri-app
